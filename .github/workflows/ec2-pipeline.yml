name: Build and Upload Artifacts

on:
  push:
    branches:
      - main

jobs:
  build_and_upload:
    runs-on: ubuntu-latest
    steps:
      # Step 1: Checkout Repository
      - name: Checkout Repository
        uses: actions/checkout@v3

      # Step 2: Configure AWS Credentials
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      # Step 3: Launch EC2 Instance
      - name: Launch EC2 Instance
        run: |
          INSTANCE_ID=$(aws ec2 run-instances --image-id ami-09eb231ad55c3963d \
            --count 1 --instance-type t2.micro \
            --key-name new-key \
            --security-group-ids sg-0226bb335bbecbf05 \
            --subnet-id subnet-089b826030629808d \
            --query "Instances[0].InstanceId" --output text)
          echo "INSTANCE_ID=$INSTANCE_ID" >> $GITHUB_ENV

      # Step 4: Wait for EC2 Instance to be Ready
      - name: Wait for EC2 Instance to Start
        run: aws ec2 wait instance-running --instance-ids $INSTANCE_ID

      # Step 5: Retrieve EC2 Public IP
      - name: Get EC2 Public IP
        run: |
          while [ -z "$PUBLIC_IP" ]; do
            sleep 5
            PUBLIC_IP=$(aws ec2 describe-instances --instance-ids $INSTANCE_ID \
              --query "Reservations[0].Instances[0].PublicIpAddress" --output text)
          done
          echo "PUBLIC_IP=$PUBLIC_IP" >> $GITHUB_ENV

      # Step 7: Run Pipeline Script on EC2
      - name: Execute Pipeline Script on EC2
        run: |
          echo "$pwd"
          ls -lart
          mv new-key.pem.txt new-key.pem
          ssh -i new-key.pem ec2-user@${{ env.PUBLIC_IP }} "bash /home/ec2-user/pipeline.sh"

      # Step 8: Ensure the Generated File Exists
      - name: Verify Output File Before Upload
        run: |
          ssh -i new-key.pem ec2-user@${{ env.PUBLIC_IP }} "test -f /home/ec2-user/output.txt || { echo 'Error: output.txt not found'; exit 1; }"

      # Step 9: Fetch Output File from EC2
      - name: Retrieve Output File from EC2
        run: |
          scp -i new-key.pem ec2-user@${{ env.PUBLIC_IP }}:/home/ec2-user/output.txt .

      # Step 10: Upload Output File to S3
      - name: Upload Output to S3
        run: |
          aws s3 cp output.txt s3://cicd-github-artifacts-bucket/output.txt

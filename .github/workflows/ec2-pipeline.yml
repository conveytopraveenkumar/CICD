name: Build and Upload Artifacts

on:
  push:
    branches:
      - main

jobs:
  build_and_upload:
    runs-on: ubuntu-latest
    env:
      REGION: us-east-1
      BUCKET_NAME: cicd-github-artifacts-bucket

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.REGION }}

      - name: Launch EC2 Instance
        run: |
          INSTANCE_ID=$(aws ec2 run-instances \
            --image-id ami-09eb231ad55c3963d \
            --count 1 \
            --instance-type t2.micro \
            --iam-instance-profile Name=EC2SSMInstanceProfile1 \
            --key-name new-key \
            --security-group-ids sg-0226bb335bbecbf05 \
            --subnet-id subnet-089b826030629808d \
            --tag-specifications 'ResourceType=instance,Tags=[{Key=Name,Value=CI-CD-Runner}]' \
            --user-data '#!/bin/bash
            sudo apt update
            sudo apt install -y awscli git' \
            --query 'Instances[0].InstanceId' \
            --output text)

          echo "INSTANCE_ID=$INSTANCE_ID" >> $GITHUB_ENV
          echo "Launched EC2 instance: $INSTANCE_ID"

      - name: Wait for EC2 Instance to Start
        run: aws ec2 wait instance-running --instance-ids $INSTANCE_ID

      - name: Wait for Instance Initialization
        run: |
          while true; do
            STATUS=$(aws ec2 describe-instance-status --instance-ids $INSTANCE_ID \
              --query "InstanceStatuses[0].{State:InstanceState.Name,System:SystemStatus.Status,Instance:InstanceStatus.Status}" \
              --output text)
            echo "$STATUS"
            [[ "$STATUS" == *"running ok ok"* ]] && break
            sleep 10
          done

      - name: Clone Repository on EC2
        run: |
          COMMAND_ID=$(aws ssm send-command \
            --document-name "AWS-RunShellScript" \
            --targets Key=InstanceIds,Values=$INSTANCE_ID \
            --parameters '{"commands":["cd /home/ubuntu && git clone https://github.com/conveytopraveenkumar/CICD.git || (cd CICD && git pull origin main)"]}' \
            --region $REGION \
            --query "Command.CommandId" --output text)

          aws ssm wait command-executed --command-id $COMMAND_ID --instance-id $INSTANCE_ID

      - name: Execute Pipeline Script
        run: |
          COMMAND_ID=$(aws ssm send-command \
            --document-name "AWS-RunShellScript" \
            --targets Key=InstanceIds,Values=$INSTANCE_ID \
            --parameters '{"commands":["bash /home/ubuntu/CICD/pipeline.sh"]}' \
            --region $REGION \
            --query "Command.CommandId" --output text)

          aws ssm wait command-executed --command-id $COMMAND_ID --instance-id $INSTANCE_ID

      - name: Verify Output File
        run: |
          COMMAND_ID=$(aws ssm send-command \
            --document-name "AWS-RunShellScript" \
            --targets Key=InstanceIds,Values=$INSTANCE_ID \
            --parameters '{"commands":["test -f /home/ubuntu/output/result.txt || echo Error: result.txt not found"]}' \
            --region $REGION \
            --query "Command.CommandId" --output text)

          aws ssm wait command-executed --command-id $COMMAND_ID --instance-id $INSTANCE_ID

      - name: Upload Output to S3
        run: |
          COMMAND_ID=$(aws ssm send-command \
            --document-name "AWS-RunShellScript" \
            --targets Key=InstanceIds,Values=$INSTANCE_ID \
            --parameters '{"commands":["aws s3 cp /home/ubuntu/output/result.txt s3://'"$BUCKET_NAME"'/result-${GITHUB_RUN_NUMBER}.txt"]}' \
            --region $REGION \
            --query "Command.CommandId" --output text)

          aws ssm wait command-executed --command-id $COMMAND_ID --instance-id $INSTANCE_ID

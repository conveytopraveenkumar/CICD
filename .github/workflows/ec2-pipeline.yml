name: Run EC2 Pipeline and Upload to S3

on:
  push:
    branches:
      - main  # Trigger on push to main branch

jobs:
  deploy:
    name: Deploy to EC2 and Run Pipeline
    runs-on: ubuntu-latest

    env:
      INSTANCE_ID: i-0c6340dd26b28f109  # Hardcoded EC2 instance ID

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Ensure latest AWS CLI version
      run: |
        if [ -x "$(command -v aws)" ]; then
          echo "AWS CLI is already installed. Updating..."
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip -q awscliv2.zip
          sudo ./aws/install --update
        else
          echo "Installing AWS CLI..."
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip -q awscliv2.zip
          sudo ./aws/install
        fi

    - name: Wait for EC2 instance to be running
      run: |
        echo "Waiting for EC2 instance $INSTANCE_ID to be running..."
        aws ec2 wait instance-running --instance-ids $INSTANCE_ID
        echo "EC2 instance $INSTANCE_ID is now running."

    - name: Check if SSM agent is online
      run: |
        echo "Checking SSM status..."
        STATUS=$(aws ssm describe-instance-information \
          --query "InstanceInformationList[?InstanceId=='$INSTANCE_ID'].PingStatus" \
          --output text)
        if [ "$STATUS" != "Online" ]; then
          echo "SSM agent is not online. Please check the EC2 instance."
          exit 1
        fi
        echo "SSM agent is online on instance $INSTANCE_ID."

    - name: Run pipeline script on EC2 via SSM
      run: |
        COMMAND_ID=$(aws ssm send-command \
          --instance-ids $INSTANCE_ID \
          --document-name "AWS-RunShellScript" \
          --comment "Run pipeline script" \
          --parameters 'commands=["cd /home/ec2-user && curl -O https://raw.githubusercontent.com/conveytopraveenkumar/CICD/main/Pipeline.sh && chmod +x Pipeline.sh && ./Pipeline.sh"]' \
          --query "Command.CommandId" \
          --output text)
        echo "SSM command sent. Command ID: $COMMAND_ID"

    # (OPTIONAL) Artifact upload moved to the EC2 script
    - name: Notify about artifact upload
      run: |
        echo "Artifact upload is handled within the EC2 script (Pipeline.sh)."
        echo "Ensure the script uploads output to S3 like:"
        echo "aws s3 cp /home/ec2-user/output/ s3://${{ secrets.S3_BUCKET_NAME }}/pipeline-artifacts/ --recursive"

    - name: Terminate EC2 instance after execution
      run: |
        aws ec2 terminate-instances --instance-ids $INSTANCE_ID
        echo "EC2 instance $INSTANCE_ID terminated."

    - name: Pipeline Complete
      run: echo "âœ… Pipeline completed successfully."

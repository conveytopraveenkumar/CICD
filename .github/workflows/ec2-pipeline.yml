name: Dynamic EC2 Pipeline and S3 Upload

on:
  push:
    branches:
      - main

jobs:
  deploy:
    name: Deploy to EC2 and Run Pipeline
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Launch EC2 instance
      id: ec2
      run: |
        INSTANCE_ID=$(aws ec2 run-instances \
          --image-id ami-084568db4383264d4 \
          --instance-type t2.micro \
          --key-name github-key \
          --iam-instance-profile Name="EC2InstanceSSMRole" \
          --security-group-ids ${{ secrets.AWS_SECURITY_GROUP_ID }} \
          --subnet-id ${{ secrets.AWS_SUBNET_ID }} \
          --associate-public-ip-address \
          --query 'Instances[0].InstanceId' \
          --output text)

        echo "INSTANCE_ID=$INSTANCE_ID" >> $GITHUB_ENV
        echo "Launched EC2 instance: $INSTANCE_ID"

    - name: Wait for EC2 to be running
      run: |
        aws ec2 wait instance-running --instance-ids $INSTANCE_ID
        echo "‚úÖ Instance $INSTANCE_ID is now running."

    - name: Wait for SSM to be online
      run: |
        echo "Waiting for SSM agent..."
        for i in {1..30}; do
          STATUS=$(aws ssm describe-instance-information \
            --query "InstanceInformationList[?InstanceId=='$INSTANCE_ID'].PingStatus" \
            --output text)
          echo "SSM status: $STATUS"
          if [ "$STATUS" = "Online" ]; then
            echo "‚úÖ SSM agent is online."
            break
          fi
          sleep 10
        done

    - name: Run pipeline script via SSM
      run: |
        COMMAND_ID=$(aws ssm send-command \
          --instance-ids "$INSTANCE_ID" \
          --document-name "AWS-RunShellScript" \
          --comment "Run pipeline" \
          --parameters 'commands=["cd /home/ubuntu && curl -O https://raw.githubusercontent.com/conveytopraveenkumar/CICD/main/Pipeline.sh && chmod +x Pipeline.sh && ./Pipeline.sh"]' \
          --query "Command.CommandId" \
          --output text)
        echo "üì¶ Command sent. Command ID: $COMMAND_ID"

    - name: Terminate EC2 instance
      run: |
        aws ec2 terminate-instances --instance-ids $INSTANCE_ID
        echo "‚ò†Ô∏è Terminated EC2 instance: $INSTANCE_ID"

    - name: Done
      run: echo "‚úÖ Pipeline completed and instance terminated."
